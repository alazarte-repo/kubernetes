apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    name: logspout
  name: logspout
  namespace: daemonsets
spec:
  selector:
    matchLabels:
      name: logspout
  template:
    metadata:
      labels:
        name: logspout
    spec:
      containers:
      - env:
        - name: SYSLOG_TAG
          value: '{{ index .Container.Config.Labels "io.kubernetes.pod.namespace"
            }}[{{ index .Container.Config.Labels "io.kubernetes.pod.name" }}]'
        - name: SYSLOG_HOSTNAME
          value: '{{ index .Container.Config.Labels "io.kubernetes.container.name"
            }}'
        - name: LOGGLY_URL
          value: "https://logs-01.loggly.com/inputs/c175a895-fcd9-458f-b318-b84f740bbad2/tag/k8s" # Es un SaaS de logs, según pelado nerd no es recomendable si tenes muchos logs ya que es algo inestable
        image: mdsol/logspout:latest
        imagePullPolicy: IfNotPresent
        args:
        - "cloudwatch://auto"
        name: logspout
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: log
      restartPolicy: Always
      volumes:
      - hostPath:
          path: /var/run/docker.sock
          type: ""
        name: log

# apiVersion: apps/v1
# kind: DaemonSet
# metadata:
#   name: fluentd-es-v1.20
#   namespace: kube-system
#   labels:
#     k8s-app: fluentd-es
# spec:
#   selector:
#     matchLabels:
#       k8s-app: fluentd-es
#   template:
#     metadata:
#       labels:
#         k8s-app: fluentd-es
#     spec:
#       containers:
#       - name: fluentd-es
#         image: garland/kubernetes-fluentd-loggly # Al ser un tipo de deployment es muy parecido en su declaración
#         command:
#           - '/bin/sh'
#           - '-c'
#           - '/usr/sbin/td-agent 2>&1 >> /var/log/fluentd.log'
#         env:
#           - name: LOGGLY_URL
#             value: "https://logs-01.loggly.com/inputs/c175a895-fcd9-458f-b318-b84f740bbad2/tag/k8s" # Es un SaaS de logs, según pelado nerd no es recomendable si tenes muchos logs ya que es algo inestable
#         volumeMounts:
#         - name: varlog
#           mountPath: /var/log
#         - name: varlibdockercontainers
#           mountPath: /var/lib/docker/containers
#           readOnly: true
#       volumes:
#       - name: varlog
#         hostPath:
#           path: /var/log
#       - name: varlibdockercontainers
#         hostPath:
#           path: /var/lib/docker/containers
