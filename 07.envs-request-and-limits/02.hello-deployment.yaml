apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello
  namespace: env-request-and-limits
spec:
  replicas: 3
  selector:
    matchLabels:
      role: hello
  template:
    metadata:
      labels:
        role: hello
    spec:
      containers:
      - name: hello
        image: gcr.io/google-samples/hello-app:1.0
        imagePullPolicy: IfNotPresent        
        ports:
        - containerPort: 80
        env: # Variables de entorno que queremos asignar a todos los pods que se encuentran dentro del deployment
        - name: MYSQL_ROOT_PASSWORD
          value: "password"
        resources:
          requests: # CPU & Memoria que le garantizamos al contenedor. Cabe aclara que kubernetes dentro de cada pod tambien corre servicios por lo que una porcion de CPU y memoria tambien se descuentan de los recursos disponibles
            memory: "16Mi"
            cpu: "10m" # Como ejemplo del punto anterior, si tenemos un CPU, podemos poner 100 pods en este contenedor pero como kubernetes necesita su espacio para sus servicios, quizás sólo se puedan crear 90 pods
          limits: # Podemos no ponerle límite
            memory: "32Mi"
            cpu: "20m" # 1000m = 1 CPU, si tenemos una VM con 4 CPU es igual a decir que tenemos 4000m

# Para realizar un scale de un deployment debemos ejecutar kubectl scale --replicas=10 deployment hello -n env-request-and-limits